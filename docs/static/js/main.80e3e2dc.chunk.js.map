{"version":3,"sources":["logo.svg","components/Scan/caret-left.svg","components/Modal/Contents/OnFound/check.svg","components/Modal/Contents/OnBingoSucceeded/gift.svg","models/slot.ts","models/line.ts","models/sheet.ts","config.tsx","context/BingoSheet.ts","components/GameMenu/index.tsx","components/BingoSheetView/index.tsx","services/Detector.ts","components/Scan/VideoScanView.tsx","components/Game/index.tsx","service/messages.ts","components/LaunchingPage/index.tsx","components/Modal/index.tsx","context/Application.ts","components/Modal/Contents/OnFound/index.tsx","components/Modal/Contents/OnBingoSucceeded/index.tsx","App.tsx","index.tsx"],"names":["module","exports","BingoSlot","props","value","label","description","imageURL","position","punched","bingo","Model","__ns","BingoLine","succeeded","slots","Date","ctx","scale","start","this","end","length","unit","offset","strokeStyle","lineWidth","beginPath","moveTo","x","y","lineTo","stroke","schema","Types","date","arrayOf","reference","BingoSheet","width","height","lines","initialized","payload","values","Array","flat","filter","slot","some","hits","hit","map","getBingoLines","save","push","getHorizontalBingo","getVerticalBingo","getDiagonalBingo","markSlotsIfBingo","line","row","every","col","len","Math","min","backslash","i","slash","arr","j","floor","random","dest","arrayShuffle","slice","variation","index","config","sheet","fill","getShuffledListWithLength","variations","v","createSlot","find","number","application","name","languages","lang","default","messages","en","start_btn","introduction","congratulation","total_bingo_count","args","found","join","ja","BingoSheetContext","createContext","init","punch","data","scanning","startScanning","stopScanning","GameMenu","app","reset","className","src","logo","alt","LineDrawerCanvas","ref","createRef","setTimeout","current","canvas","getContext","draw","console","log","isCompleted","LineDrawer","BingoSheetCell","cn","split","key","BingoSheetRow","BingoSheetView","isBingo","getRectOfQRCode","video","size","videoWidth","videoHeight","facingMode","test","navigator","userAgent","exact","detect","callback","document","createElement","srcObject","rect","drawImage","img","getImageData","jsqr","detectQRCodeFromVideo","VideoStream","stream","stop","area","useEffect","id","error","offsetWidth","offsetHeight","setInterval","bind","qrcode","clearInterval","JSON","parse","pause","onClick","left","muted","autoPlay","playsInline","VideoScanView","useState","setStream","c","onClickStart","a","mediaDevices","getUserMedia","audio","s","undefined","getTracks","track","Content","Consumer","Game","setScanState","context","Provider","get","URL","window","location","href","searchParams","availables","l","getDefaultLang","LaunchingPage","startMessage","av","Modal","close","content","show","opacity","setOpacity","style","ApplicationContext","modal","setModalState","state","closeModal","ModalContentOnFound","texts","val","getFoundValueTexts","check","ModalContentOnBingoSucceeded","count","total","gift","App","exists","updateBingo","modalState","resolve","showModal","Promise","ms","bingoCount","Application","confirm","ReactDOM","render","getElementById"],"mappings":"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YAAa,iBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,gBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,YAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,kBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,iBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,eAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,gBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,iBAEjB,CACIF,MAAO,OACPC,MAAO,SACPC,YAAa,gBAGjB,CACIF,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,IACPC,MAAO,KAEX,CACID,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,UAEX,CACID,MAAO,QACPC,MAAO,UAEX,CACID,MAAO,KACPC,MAAO,OAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,QACPC,MAAO,UAEX,CACID,MAAO,MACPC,MAAO,SAEX,CACID,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,QACPC,MAAO,UAEX,CACID,MAAO,QACPC,MAAO,UAEX,CACID,MAAO,MACPC,MAAO,cAEX,CACID,MAAO,MACPC,MAAO,gBAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,KACPC,MAAO,MAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,MACPC,MAAO,UAKvBqF,UAAW,CACP,CACIC,KAAM,KACNtF,MAAO,qBACPuF,SAAS,GAEb,CACID,KAAM,KACNtF,MAAO,YAGfwF,SAAU,CACNC,GAAI,CACAC,UAAW,SACXC,aAAc,CACV,oCACA,+BACA,kCAEJC,eAAgB,CACZ,YACA,kCACA,6BAEJC,kBAAmB,SAACC,GAAD,OAAU,0CAAgBA,EAAK,GAArB,YAC7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","file":"static/js/main.80e3e2dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c74ea89.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret-left.4fa5bd11.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.33410986.svg\";","module.exports = __webpack_public_path__ + \"static/media/gift.f4453374.svg\";","import {Model} from 'chomex';\n\nexport interface IBingoSlotConfig {\n    value: string;\n    label: string;\n    description?: string;\n    imageURL?: string;\n}\n\nexport default class BingoSlot extends Model {\n\n    protected static __ns = 'BingoSlot';\n\n    public value: string;\n    public label: string;\n    public description: string;\n    public imageURL: string;\n    public position: {\n        x: number,\n        y: number\n    };\n    public punched: boolean;\n    public bingo: boolean;\n\n    constructor(props: any) {\n        super(props);\n        this.value = props.value;\n        this.label = props.label;\n        this.description = props.description;\n        this.imageURL = props.imageURL;\n        this.position = props.position || {};\n        this.punched = props.punched || false;\n        this.bingo = props.bingo || false;\n    }\n}","import {Model, Types} from 'chomex';\nimport BingoSlot from './slot';\n\n/**\n * BingoLine represents a successfull bingo line.\n */\nexport default class BingoLine extends Model {\n\n  protected static schema = {\n    succeeded: Types.date,\n    slots: Types.arrayOf(Types.reference(BingoSlot)),\n  }\n\n  public succeeded: Date;\n  public slots: BingoSlot[];\n\n  constructor(props: { slots: BingoSlot[], succeeded?: Date }) {\n    super(props);\n    this.slots = props.slots;\n    this.succeeded = props.succeeded || new Date();\n  }\n\n  public draw(ctx: CanvasRenderingContext2D, scale: number = 100) {\n    const start = this.slots[0].position;\n    const end = this.slots[this.slots.length - 1].position;\n    const unit = scale / this.slots.length;\n    const offset = unit / 2;\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = scale / 100;\n    ctx.beginPath();\n    ctx.moveTo(offset + unit * start.x, offset + unit * start.y);\n    ctx.lineTo(offset + unit * end.x, offset + unit * end.y);\n    ctx.stroke();\n  }\n\n}","import {Model, Types} from 'chomex';\n\nimport BingoSlot, { IBingoSlotConfig } from './slot';\nimport BingoLine from './line';\nimport { Payload } from './qrcode';\n\nexport interface IBingoConfig {\n    sheet: {\n        width: number;\n        height: number;\n    };\n    slot: {\n        variations: IBingoSlotConfig[];\n    }\n}\n\nexport default class BingoSheet extends Model {\n\n    protected static __ns = 'BingoSheet';\n    protected static schema = {\n        width: Types.number,\n        height: Types.number,\n        slots: Types.arrayOf(\n            Types.arrayOf(\n                Types.reference(BingoSlot)\n            )\n        ),\n        lines: Types.arrayOf(Types.reference(BingoLine)),\n        initialized: Types.date,\n    }\n\n    public width: number;\n    public height: number;\n    public slots: BingoSlot[][];\n    public length: number;\n    public lines: BingoLine[];\n    public initialized: Date;\n\n    constructor(props: any) {\n        super(props, 'singleton');\n        this.width = props.width;\n        this.height = props.height;\n        this.slots = props.slots;\n        this.lines = props.lines || [];\n        this.length = this.width * this.height;\n        this.initialized = props.date || new Date();\n    }\n\n    private static arrayShuffle<T>(arr: T[]): T[] {\n        for (let i = arr.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n\n    private static getShuffledListWithLength(arr: IBingoSlotConfig[], length: number): IBingoSlotConfig[] {\n        const dest: IBingoSlotConfig[] = [];\n        while (dest.length < length) {\n            dest.push(...this.arrayShuffle<IBingoSlotConfig>(arr))\n        }\n        return dest.slice(0, length);\n    }\n\n    private static createSlot(variation: IBingoSlotConfig, index: number, width: number): BingoSlot {\n        const { value, label, description, imageURL } = variation;\n        const [x, y] = [index % width, Math.floor(index / width)];\n        const slot = new BingoSlot({ value, label, description, imageURL, position: { x, y } });\n        return slot;\n    }\n\n    static init(config: IBingoConfig): BingoSheet {\n        const {width, height} = config.sheet;\n        const slots: BingoSlot[][] = Array(height).fill(true).map(() => []);\n        const length = width * height;\n        this.getShuffledListWithLength(config.slot.variations, length).map((v, i) => {\n            const slot = this.createSlot(v, i, width);\n            return slots[slot.position.y].push(slot);\n        });\n        const sheet = new BingoSheet({\n            width: config.sheet.width,\n            height: config.sheet.height,\n            slots\n        });\n        return sheet;\n    }\n\n    static exists(): BingoSheet | undefined {\n        return this.find<BingoSheet>('singleton');\n    }\n\n    /**\n     * hit returns the slot which matches the given payload,\n     * or undefined if not found.\n     * @param payload\n     */\n    public hit(payload: Payload): BingoSlot[] {\n        const values = payload.value instanceof Array ? payload.value : [payload.value];\n        // eslint-disable-next-line\n        return this.slots.flat().filter((slot) => values.some(value => slot.value == value));\n    }\n\n    /**\n     * punch marks the given hit slot as punched.\n     * @param hits\n     */\n    public punch(hits: BingoSlot[]): BingoSheet {\n        // eslint-disable-next-line\n        this.slots.flat().filter((slot) => hits.some(hit => hit.value == slot.value)).map((slot) => {\n            // slot.punched = true;\n            const {x, y} = slot.position;\n            this.slots[y][x].punched = true;\n        });\n        this.lines = this.getBingoLines();\n        return this.save();\n    }\n\n    public isBingo(): boolean {\n        return this.getBingoLines().length !== 0;\n    }\n\n    public isCompleted(): boolean {\n        const { width, height } = this;\n        return this.getBingoLines().length >= width + height + 2;\n    }\n\n    public getBingoNumber(): number {\n        return this.getBingoLines().length;\n    }\n\n    public getBingoLines(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        lines.push(...this.getHorizontalBingo());\n        lines.push(...this.getVerticalBingo())\n        lines.push(...this.getDiagonalBingo());\n        this.markSlotsIfBingo(lines);\n        return lines;\n    }\n\n    private markSlotsIfBingo(lines: BingoLine[]) {\n        lines.map(line => {\n            return line.slots.map(slot => {\n                // this.slots[slot.position.y][slot.position.x].bingo = true;\n                return slot.bingo = true;\n            })\n        })\n    }\n\n    /**\n     * Return all the slots which constitute the horizontal bingo.\n     */\n    public getHorizontalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        for (let row = 0; row < this.height; row++) {\n            if (this.slots[row].every((slot) => slot.punched)) {\n                lines.push(new BingoLine({ slots: this.slots[row] }))\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Return all the slots which constitute the vertical bingo.\n     */\n    public getVerticalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        for (let col = 0; col < this.width; col++) {\n            if (this.slots.every((row) => row[col].punched)) {\n                lines.push(new BingoLine({slots: this.slots.map((row) => row[col]).flat()}));\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Return all the slots which constitute the diagonal bingo.\n     */\n    public getDiagonalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        if (this.width === this.height) {\n            const len = Math.min(this.width, this.height);\n            const backslash = this.slots.map((row, i) => row[i]);\n            if (backslash.every(slot => slot.punched)) {\n                lines.push(new BingoLine({ slots: backslash }));\n            }\n            const slash = this.slots.map((row, i) => row[len - i - 1]);\n            if (slash.every(slot => slot.punched)) {\n                lines.push(new BingoLine({ slots: slash }));\n            }\n        } else {\n            // TODO: Consider NON-SQUARE bingo sheet.\n            return [];\n        }\n        return lines;\n    }\n}","import React from 'react';\nimport { Config } from \"./config.d\";\n\nconst config: Config = {\n    application: {\n        name: \"QRBINGO\"\n    },\n    bingo: {\n        sheet: {\n            width: 5,\n            height: 5\n        },\n        slot: {\n            variations: [\n                {\n                    value: \"istj\",\n                    label: \"IS\\nTJ\",\n                    description: \"The Inspector\"\n                },\n                {\n                    value: \"infj\",\n                    label: \"IN\\nFJ\",\n                    description: \"The Counselor\"\n                },\n                {\n                    value: \"intj\",\n                    label: \"IN\\nTJ\",\n                    description: \"The Mastermind\"\n                },\n                {\n                    value: \"enfj\",\n                    label: \"EN\\nFJ\",\n                    description: \"The Giver\"\n                },\n                {\n                    value: \"istp\",\n                    label: \"IS\\nTP\",\n                    description: \"The Craftsman\"\n                },\n                {\n                    value: \"esfj\",\n                    label: \"ES\\nFJ\",\n                    description: \"The Provider\"\n                },\n                {\n                    value: \"infp\",\n                    label: \"IN\\nFP\",\n                    description: \"The Idealist\"\n                },\n                {\n                    value: \"esfp\",\n                    label: \"ES\\nFP\",\n                    description: \"The Performer\"\n                },\n                {\n                    value: \"enfp\",\n                    label: \"EN\\nFP\",\n                    description: \"The Champion\"\n                },\n                {\n                    value: \"estp\",\n                    label: \"ES\\nTP\",\n                    description: \"The Doer\"\n                },\n                {\n                    value: \"estj\",\n                    label: \"ES\\nTJ\",\n                    description: \"The Supervisor\"\n                },\n                {\n                    value: \"entj\",\n                    label: \"EN\\nTJ\",\n                    description: \"The Commander\"\n                },\n                {\n                    value: \"intp\",\n                    label: \"IN\\nTP\",\n                    description: \"The Thinker\"\n                },\n                {\n                    value: \"isfj\",\n                    label: \"IS\\nFJ\",\n                    description: \"The Nurturer\"\n                },\n                {\n                    value: \"entp\",\n                    label: \"EN\\nTP\",\n                    description: \"The Visionary\"\n                },\n                {\n                    value: \"isfp\",\n                    label: \"IS\\nFP\",\n                    description: \"The Composer\"\n                },\n                // Non-MBTI tags\n                {\n                    value: \"sp\",\n                    label: \"SP\"\n                },\n                {\n                    value: \"p\",\n                    label: \"P\"\n                },\n                {\n                    value: \"ap\",\n                    label: \"AP\"\n                },\n                {\n                    value: \"em\",\n                    label: \"EM\"\n                },\n                {\n                    value: \"asc\",\n                    label: \"ASC\"\n                },\n                {\n                    value: \"ba\",\n                    label: \"BA\"\n                },\n                {\n                    value: \"mirts\",\n                    label: \"MI/RTS\"\n                },\n                {\n                    value: \"dadqb\",\n                    label: \"DAD/QB\"\n                },\n                {\n                    value: \"se\",\n                    label: \"S/E\"\n                },\n                {\n                    value: \"rni\",\n                    label: \"R&I\"\n                },\n                {\n                    value: \"itfac\",\n                    label: \"IT/FAC\"\n                },\n                {\n                    value: \"alf\",\n                    label: \"A/L/F\"\n                },\n                {\n                    value: \"ea\",\n                    label: \"EA\"\n                },\n                {\n                    value: \"comvg\",\n                    label: \"COM/VG\"\n                },\n                {\n                    value: \"pdrec\",\n                    label: \"PD/REC\"\n                },\n                {\n                    value: \"soa\",\n                    label: \"SO\\nAdults\"\n                },\n                {\n                    value: \"soc\",\n                    label: \"SO\\nChildren\"\n                },\n                {\n                    value: \"off\",\n                    label: \"OFF\"\n                },\n                {\n                    value: \"6ma\",\n                    label: \"6MA\"\n                },\n                {\n                    value: \"nep\",\n                    label: \"NEP\"\n                },\n                {\n                    value: \"kan\",\n                    label: \"KAN\"\n                },\n                {\n                    value: \"gt\",\n                    label: \"GT\",\n                },\n                {\n                    value: \"yep\",\n                    label: \"YEP\"\n                },\n                {\n                    value: \"brs\",\n                    label: \"BRS\"\n                }\n            ]\n        }\n    },\n    languages: [\n        {\n            lang: \"ja\",\n            label: \"日本語\",\n            default: true\n        },\n        {\n            lang: \"en\",\n            label: \"English\"\n        }\n    ],\n    messages: {\n        en: {\n            start_btn: \"START!\",\n            introduction: [\n                \"Scan QR code of people around you\",\n                \"Collect different trait tags\",\n                \"Aim for Bingo and win a prize!\"\n            ],\n            congratulation: [\n                \"Congrats!\",\n                \"Show this screen to event staff\",\n                \"and get an awesome prize!\"\n            ],\n            total_bingo_count: (args) => <span>You have {args[0]} bingo!</span>,\n            found: (args) => <span>Found <b>{args.join(', ')}</b>!</span>,\n        },\n        ja: {\n            start_btn: \"スタート！\",\n            introduction: [\n                \"近くの人のQRコードをスキャン\",\n                \"いろんなタイプのタグを集めよう！\",\n                \"ビンゴを狙って商品をもらおう！\"\n            ],\n            congratulation: [\n                \"おめでとうございます！\",\n                \"お近くのスタッフにこちらの\",\n                \"画面を見せて、素敵なギフトを\",\n                \"お受け取りください。\"\n            ],\n            total_bingo_count: (args) => <span>{args[0]}ビンゴ達成！</span>,\n            found: (args) => <span><b>{args.join(', ')}</b> をみつけました！</span>,\n        }\n    }\n}\n\nexport default config;\n","import { createContext } from \"react\";\nimport BingoSheet from \"../models/sheet\";\nimport config from \"../config\";\nimport { QRCodeData } from \"../models/qrcode\";\n\nconst BingoSheetContext = createContext({\n    bingo: {\n        sheet: BingoSheet.init(config.bingo),\n    },\n    punch(data: QRCodeData) {},\n    scanning: false,\n    startScanning() {},\n    stopScanning() {},\n});\n\nexport default BingoSheetContext;\n","import React from 'react';\nimport BingoSheet from '../../models/sheet';\n\n// import refresh from './refresh.svg';\nimport logo from '../../logo.svg';\nimport './index.scss';\n\nconst GameMenu: React.FC<{ app: { name: string }, sheet: BingoSheet, reset: () => void, }> = ({ app, sheet, reset, }) => {\n    return (\n        <div className=\"game-menu\">\n            <h1>\n                <img src={logo} alt={app.name} />\n                <span>{app.name}</span>\n            </h1>\n            {/* <span className=\"start-time\">\n                {sheet.initialized.toLocaleString()}\n            </span> */}\n            {/* <img src={refresh} alt=\"Restart Game\" onClick={reset} /> */}\n        </div>\n    );\n};\n\nexport default GameMenu;","import React, { createRef } from 'react';\nimport cn from 'classnames';\n\nimport BingoSheet from \"../../models/sheet\";\nimport BingoSlot from '../../models/slot';\n\nimport './index.scss';\n\nconst LineDrawerCanvas: React.FC<{ sheet: BingoSheet }> = ({ sheet }) => {\n\n    const lines = sheet.lines;\n    const draw = (canvas: HTMLCanvasElement, scale: number) => {\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        lines.map(line => line.draw(ctx, scale));\n        console.log('Completed:', sheet.isCompleted());\n    };\n\n    const ref = createRef<HTMLCanvasElement>();\n\n    // Make sure canvas exists.\n    // TODO: Find another way.\n    const scale = 1000;\n    setTimeout(() => ref.current ? draw(ref.current, scale) : null);\n    return (\n        <canvas width={scale} height={scale} ref={ref} />\n    );\n};\n\nconst LineDrawer: React.FC<{ sheet: BingoSheet }> = ({ sheet }) => {\n    return (\n        <div className=\"Bingo_Line_Drawer_Container\">\n            <LineDrawerCanvas sheet={sheet} />\n        </div>\n    );\n};\n\nconst BingoSheetCell: React.FC<{slot: BingoSlot}> = ({slot}) => {\n    return (\n        <div className={cn(\"sheet-cell\", { punched: slot.punched, bingo: slot.bingo })}>\n            <div className=\"hole\">\n                {slot.label.split(\"\\n\").map((line, i) => <div key={i}>{line}</div>)}\n            </div>\n        </div>\n    );\n};\n\nconst BingoSheetRow: React.FC<{row: BingoSlot[]}> = ({row}) => {\n    return (\n        <div className=\"sheet-row\">\n            {row.map((slot, i) => <BingoSheetCell key={i} slot={slot} />)}\n        </div>\n    );\n};\n\nconst BingoSheetView: React.FC<{sheet: BingoSheet}> = ({sheet}) => {\n    return (\n        <div className=\"sheet-container\">\n            <div className={cn(\"sheet-wrapper\", { bingo: sheet.isBingo() })}>\n                {sheet.slots.map((row, i) => <BingoSheetRow key={i} row={row} />)}\n            </div>\n            <LineDrawer sheet={sheet} />\n        </div>\n    );\n};\n\nexport default BingoSheetView;\n","import jsqr, { QRCode } from 'jsqr';\n\nfunction getRectOfQRCode(video: HTMLVideoElement, size: { width: number, height: number }): {\n    x: number, y: number, width: number, height: number,\n} {\n    const x = (video.videoWidth  - size.width) / 2;\n    const y = (video.videoHeight - size.height) / 2;\n    return {x, y, ...size};\n}\n\nexport function detectQRCodeFromVideo({\n    video, canvas, size,\n}: {\n    video: HTMLVideoElement | null,\n    canvas: HTMLCanvasElement | null,\n    size: { width: number, height: number },\n}): QRCode | null {\n    if (!canvas) return null;\n    if (!video) return null;\n    const stream = video.srcObject;\n    if (!stream) return null;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return null;\n    const rect = getRectOfQRCode(video, size);\n    ctx.drawImage(\n        video, // Data Source\n        rect.x, rect.y, rect.width, rect.height, // Source Rect\n        0, 0, canvas.width, canvas.height, // Dest Rect\n    );\n    const img = ctx.getImageData(0, 0, video.width, video.height);\n    return jsqr(img.data, video.width, video.height);\n}\n\nexport function detectQRCodeFromImageURL(imageURL: string): Promise<QRCode | null> {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.src = imageURL;\n        img.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            [canvas.width, canvas.height] = [img.width, img.height];\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctx.drawImage(img, 0, 0);\n            const qrcode = jsqr(ctx.getImageData(0, 0, img.width, img.height).data, img.width, img.height);\n            resolve(qrcode);\n        };\n    });\n}","import React, { createRef, useState, RefObject, useEffect } from 'react';\nimport \"./VideoScanView.scss\";\n\nimport { detectQRCodeFromVideo } from '../../services/Detector';\nimport { QRCodeData } from '../../models/qrcode';\nimport { QRCode } from 'jsqr';\n\nimport left from './caret-left.svg';\n\nconst isMobile = /(iPhone|iPad|iPod|Android)/i.test(navigator.userAgent);\nconst facingMode =  isMobile ? { exact: 'environment' } : 'user';\n\nconst detect = (video: HTMLVideoElement, size: { width: number, height: number }, callback: (qrcode: QRCode | null) => void) => {\n    const canvas = document.createElement('canvas');\n    [canvas.width, canvas.height] = [video.width, video.height];\n    const qrcode = detectQRCodeFromVideo({ video, canvas, size })\n    callback(qrcode);\n};\n\nconst VideoStream: React.FC<{\n    stream: MediaStream,\n    stop: (s: MediaStream, data?: QRCodeData) => void,\n    video: RefObject<HTMLVideoElement>,\n}> = ({ stream, stop, video }) => {\n    const onSuccess = (data: QRCodeData) => {\n        if (video.current) video.current.pause();\n        stop(stream, data);\n    };\n    const area = createRef<HTMLDivElement>();\n    useEffect(() => {\n        const v = video.current;\n        if (!v) return console.error('video tag is not ready');\n        v.srcObject = stream;\n        let id: NodeJS.Timeout;\n        const callback = (qrcode: QRCode | null) => {\n            if (!qrcode) return;\n            clearInterval(id);\n            onSuccess(JSON.parse(qrcode.data) as QRCodeData);\n        };\n        const { offsetWidth: width, offsetHeight: height } = area.current!;\n        id = setInterval(detect.bind(null, v, {width, height}, callback), 1 * 1000);\n        // DEBUG:\n        // setTimeout(() => onSuccess({ action: QRCodeAction.DEBUG, payload: { value: 'isfp' } }), 2000)\n    // eslint-disable-next-line\n    }, []);\n    return (\n        <div className=\"Video_Stream_Container\">\n            <div className=\"Video_Stream_Navigation Top\">\n                <div className=\"nav-left\" onClick={() => stop(stream)}>\n                    <img src={left} alt=\"back\" className=\"nav-item-img\" />\n                    <span>Back</span>\n                </div>\n                <div className=\"nav-title\">Scan QR code</div>\n                <div className=\"nav-right\"></div>\n            </div>\n            <div className=\"Video_Stream_Movie\">\n                <div className=\"Video_Stream_Detect_Area\">\n                    <div className=\"Video_Stream_Detect_Area_Line\" ref={area}></div>\n                </div>\n                <video ref={video} muted={true} autoPlay playsInline width={'100%'} height={'100%'} />\n            </div>\n            <div className=\"Video_Stream_Navigation Bottom\">\n                <div className=\"nav-title\">Place code inside the box</div>\n            </div>\n        </div>\n    );\n};\n\nconst VideoScanView: React.FC<{ punch(data: QRCodeData): void }> = ({ punch }) => {\n    const [stream, setStream] = useState<MediaStream>();\n    const stop = (s: MediaStream, data?: QRCodeData) => {\n        setTimeout(() => setStream(undefined), 0);\n        s.getTracks().map(track => track.stop())\n        if (data) punch(data);\n    };\n    const v = createRef<HTMLVideoElement>();\n    const c = createRef<HTMLDivElement>();\n    const onClickStart = async () => {\n        const width = c.current!.offsetWidth;\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: false, video: { facingMode, width, height: width }\n        });\n        setStream(stream);\n    };\n    return (\n        <div className=\"video-capture-container\" ref={c}>\n            <button onClick={onClickStart}>SCAN QR CODE</button>\n            {stream ? <VideoStream stream={stream} stop={stop} video={v} /> : null}\n        </div>\n    );\n};\n\nexport default VideoScanView;\n","import React, { useState } from 'react';\nimport BingoSheetContext from '../../context/BingoSheet';\nimport BingoSheet from '../../models/sheet';\nimport { QRCodeData } from '../../models/qrcode';\n\nimport config from '../../config';\nimport GameMenu from '../GameMenu';\nimport BingoSheetView from '../BingoSheetView';\nimport VideoScanView from '../Scan/VideoScanView';\n\nimport './index.scss';\n\nconst Content: React.FC<{ reset: () => void, }> = ({ reset, }) => {\n  return (\n    <BingoSheetContext.Consumer>\n      {({bingo, punch}) => (\n        <div className=\"Game\">\n          <div className=\"Game_Title\">\n            <GameMenu app={config.application} sheet={bingo.sheet} reset={reset} />\n          </div>\n          <div className=\"Game_Contents\">\n            <div className=\"Bingo_Sheet_Label\">\n              <h2>YOUR BINGO SHEET</h2>\n              {bingo.sheet.lines.length ? <span>{bingo.sheet.lines.length} bingo</span> : null}\n            </div>\n            <BingoSheetView sheet={bingo.sheet} />\n            <VideoScanView punch={punch} />\n          </div>\n        </div>\n      )}\n    </BingoSheetContext.Consumer>\n  );\n};\n\nconst Game: React.FC<{\n    bingo: { sheet: BingoSheet },\n    punch: (data: QRCodeData) => void,\n    reset: () => void,\n}> = ({ bingo, punch, reset }) => {\n\n  const [scanning, setScanState] = useState(false);\n  const startScanning = () => setScanState(true);\n  const stopScanning = () => setScanState(false);\n\n  const context = {\n    bingo, punch,\n    scanning, startScanning, stopScanning,\n  };\n\n  return (\n    <BingoSheetContext.Provider value={context}>\n      <Content reset={reset} />\n    </BingoSheetContext.Provider>\n  );\n}\n\nexport default Game;\n","import config from '../config';\nimport { ReactNode } from 'react';\n\nconst messages = config.messages;\n\nfunction getDefaultLang(): string {\n    const availables = config.languages || [];\n    if (!availables) return 'ja';\n    const found = availables.find((l) => l.default);\n    if (!found) return 'ja';\n    return found.lang;\n}\n\nfunction get(key: string, args: any[] = []): string | string[] | ReactNode | null {\n    const url = new URL(window.location.href);\n    const lang = url.searchParams.get('lang') || getDefaultLang();\n    const dict = (messages as any)[lang];\n    const v = dict[key];\n    if (typeof v === 'undefined') return null;\n    if (typeof v === 'function') return v(args) as ReactNode;\n    return v;\n}\n\nexport default {\n    get,\n};\n","import React from 'react';\nimport './index.scss';\n\nimport logo from \"../../logo.svg\";\nimport config from '../../config';\nimport messages from '../../service/messages';\n\nconst LaunchingPage: React.FC<{start: () => void}> = ({start}) => {\n    const introduction = messages.get('introduction') as string[] || [];\n    const startMessage = messages.get('start_btn') as string;\n    return (\n        <div className=\"launching-page\">\n            <div className=\"legend\">\n                <div className=\"title\">\n                    <h1>\n                        <img src={logo} alt=\"QRBINGO\" />\n                        QRBINGO\n                    </h1>\n                </div>\n                <div className=\"lang-list\">\n                    {config.languages.map((av) => {\n                        return <a key={av.lang} href={`?lang=${av.lang}`}>{av.label}</a>;\n                    })}\n                </div>\n                <div className=\"introduction\">\n                    <ol>\n                        {introduction.map((line, i) => <li key={i}>\n                            <br /><div>{line}</div>\n                        </li>)}\n                    </ol>\n                </div>\n                <div className=\"start-button-wrapper\">\n                    <button onClick={start}>{startMessage}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LaunchingPage;\n","import React, { ReactNode, useState, useEffect } from 'react';\n\n// import closeIcon from \"./close.png\";\n\nimport \"./index.scss\";\n\nconst Modal: React.FC<{\n    close: () => void,\n    show: boolean,\n    content?: ReactNode,\n}> = ({ close, content, show }) => {\n    const [opacity, setOpacity] = useState<number>(0);\n    useEffect(() => {\n        setOpacity(show ? 1 : 0);\n    }, [show]);\n    return (\n        <div className=\"Modal_Container\" style={{ opacity }}>\n            <div className=\"Modal_Content_Wrapper\">\n                <div\n                    className=\"Modal_Content_Background\"\n                    onClick={close}\n                >\n                    <div className=\"Modal_Content\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n            <div className=\"Modal_Background\"></div>\n        </div>\n    );\n};\n\nexport default Modal;\n","import { createContext, ReactNode } from \"react\";\n\nconst ApplicationContext = createContext({\n    modal: null,\n    setModalState: (state: { content?: ReactNode, show: boolean }) => { },\n    closeModal: () => {},\n});\n\nexport default ApplicationContext;\n","import React from 'react';\n\nimport \"../common.scss\";\nimport check from './check.svg';\nimport { Payload } from '../../../../models/qrcode';\n\nimport messages from '../../../../service/messages';\nimport config from '../../../../config';\n\nfunction getFoundValueTexts(values: string[] = []): string[] {\n    // FIXME: ugly\n    return config.bingo.slot.variations\n        .filter(v => values.some(val => val === v.value))\n        .map((v) => v.label.split('\\n').join(''));\n}\n\nconst ModalContentOnFound: React.FC<{\n    payload: Payload,\n    close: () => void,\n}> = ({\n    payload,\n    close,\n}) => {\n    const texts = getFoundValueTexts(payload.value as string[]);\n    const found = messages.get('found', texts);\n    return (\n        <div className=\"Content_Wrapper\">\n            <div className=\"Content_Icon\">\n                <img src={check} alt=\"Found\" />\n            </div>\n            <div className=\"Content_Message\">\n                <div>{found}</div>\n            </div>\n            <div className=\"Content_Actions\">\n                <button onClick={close}>VIEW YOUR CARD</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnFound;\n","import React from 'react';\nimport gift from './gift.svg';\nimport \"../common.scss\";\nimport messages from '../../../../service/messages';\n\nconst ModalContentOnBingoSucceeded: React.FC<{\n    close: () => void,\n    count: number,\n}> = ({\n    close,\n    count,\n}) => {\n    const lines = messages.get('congratulations') as string[] || [];\n    const total = messages.get('total_bingo_count', [count]);\n    return (\n        <div className=\"Content_Wrapper\" onClick={close}>\n            <div className=\"Content_Icon\">\n                <img src={gift} alt=\"Congraturations!\" />\n            </div>\n            <div className=\"Content_Message\">\n                <h1>BINGO!!!</h1>\n            </div>\n            <div className=\"Content_Message Lines\">\n                {lines.map((line, i) => <p key={i}>{line}</p>)}\n                {total}\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnBingoSucceeded;","import React, { useState, ReactNode } from 'react';\n\nimport Game from './components/Game';\nimport LaunchingPage from './components/LaunchingPage';\nimport BingoSheet from \"./models/sheet\";\n\nimport config from './config';\nimport { QRCodeData } from './models/qrcode';\n\nimport \"./App.scss\";\nimport Modal from './components/Modal';\n\nimport ApplicationContext from \"./context/Application\";\nimport ModalContentOnFound from './components/Modal/Contents/OnFound';\nimport ModalContentOnBingoSucceeded from './components/Modal/Contents/OnBingoSucceeded';\n\nconst App: React.FC = () => {\n  // BingoSheet.drop();\n  const sheet = BingoSheet.exists();\n  const [bingo, updateBingo] = useState({ sheet: sheet as BingoSheet });\n\n  const [modalState, setModalState] = useState<{ content?: ReactNode, show: boolean, resolve?: () => void }>({\n    content: null, show: false,\n  });\n  const closeModal = () => {\n    setTimeout(() => setModalState({ show: false }), 400);\n    setModalState({ show: false, content: modalState.content });\n    if (typeof modalState.resolve === 'function') modalState.resolve();\n  };\n  const showModal = (content: ReactNode) => {\n    return new Promise((resolve) => {\n      setModalState({ show: false, content, resolve });\n      setTimeout(() => setModalState({ show: true, content, resolve }));\n    });\n  };\n\n  const ctx = {\n    modal: null, setModalState: (ms: { modal?: ReactNode, show: boolean }) => setModalState(ms), closeModal,\n  }\n\n  const punch = async (data: QRCodeData) => {\n    await showModal(<ModalContentOnFound payload={data.payload} close={closeModal} />);\n    const slots = bingo.sheet.hit(data.payload);\n    if (!slots.length) return; // TODO: do something\n    const bingoCount = bingo.sheet.lines.length;\n    updateBingo({ sheet: bingo.sheet.punch(slots) });\n    if (bingoCount < bingo.sheet.lines.length) setTimeout(() => {\n      showModal(<ModalContentOnBingoSucceeded close={closeModal} count={bingo.sheet.lines.length} />);\n    }, 500); // FIXME: ひー\n  };\n\n  const reset = () => {\n    if (!window.confirm(\"Are you sure to delete current progress and start new game?\")) return;\n    updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n  };\n  const start = () => updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n\n  return (\n    <ApplicationContext.Provider value={ctx}>\n    <div className=\"App\">\n      {bingo.sheet ? <Game bingo={bingo} punch={punch} reset={reset} /> : <LaunchingPage start={start} />}\n      {modalState.content ? <Modal close={closeModal} {...modalState} /> : null}\n    </div>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}