{"version":3,"sources":["logo.svg","components/Scan/caret-left.svg","components/Modal/Contents/OnFound/check.svg","components/Modal/Contents/OnBingoSucceeded/gift.svg","models/slot.ts","models/line.ts","models/sheet.ts","config.tsx","context/BingoSheet.ts","components/GameMenu/index.tsx","components/BingoSheetView/index.tsx","services/Detector.ts","components/Scan/VideoScanView.tsx","components/Game/index.tsx","service/messages.ts","components/LaunchingPage/index.tsx","components/Modal/index.tsx","context/Application.ts","components/Modal/Contents/OnFound/index.tsx","components/Modal/Contents/OnBingoSucceeded/index.tsx","App.tsx","index.tsx"],"names":["module","exports","BingoSlot","props","value","label","description","imageURL","position","punched","bingo","Model","__ns","BingoLine","succeeded","slots","Date","ctx","scale","start","this","end","length","unit","offset","strokeStyle","lineWidth","beginPath","moveTo","x","y","lineTo","stroke","schema","Types","date","arrayOf","reference","BingoSheet","width","height","lines","initialized","payload","flat","find","slot","hit","filter","map","getBingoLines","save","push","getHorizontalBingo","getVerticalBingo","getDiagonalBingo","markSlotsIfBingo","line","row","every","col","len","Math","min","backslash","i","slash","arr","j","floor","random","dest","arrayShuffle","slice","variation","index","config","sheet","Array","fill","getShuffledListWithLength","variations","v","createSlot","number","application","name","languages","lang","default","messages","en","introduction","congratulation","found","args","ja","BingoSheetContext","createContext","init","punch","data","scanning","startScanning","stopScanning","GameMenu","app","reset","className","src","logo","alt","LineDrawerCanvas","ref","createRef","setTimeout","current","canvas","getContext","draw","console","log","isCompleted","LineDrawer","BingoSheetCell","cn","split","key","BingoSheetRow","BingoSheetView","isBingo","getRectOfQRCode","video","size","videoWidth","videoHeight","facingMode","test","navigator","userAgent","exact","detect","callback","document","createElement","srcObject","rect","drawImage","img","getImageData","jsqr","detectQRCodeFromVideo","VideoStream","stream","stop","area","useEffect","id","error","offsetWidth","offsetHeight","setInterval","bind","qrcode","clearInterval","JSON","parse","pause","onClick","left","muted","autoPlay","playsInline","VideoScanView","useState","setStream","c","onClickStart","a","mediaDevices","getUserMedia","audio","s","undefined","getTracks","track","Content","Consumer","Game","setScanState","context","Provider","get","URL","window","location","href","searchParams","availables","l","getDefaultLang","LaunchingPage","av","Modal","close","content","show","opacity","setOpacity","style","ApplicationContext","modal","setModalState","state","closeModal","ModalContentOnFound","toString","toUpperCase","check","ModalContentOnBingoSucceeded","gift","App","exists","updateBingo","modalState","resolve","showModal","Promise","ms","bingoCount","Application","confirm","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a45fd47c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c74ea89.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret-left.4fa5bd11.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.33410986.svg\";","module.exports = __webpack_public_path__ + \"static/media/gift.f4453374.svg\";","import {Model} from 'chomex';\n\nexport interface IBingoSlotConfig {\n    value: string;\n    label: string;\n    description?: string;\n    imageURL?: string;\n}\n\nexport default class BingoSlot extends Model {\n\n    protected static __ns = 'BingoSlot';\n\n    public value: string;\n    public label: string;\n    public description: string;\n    public imageURL: string;\n    public position: {\n        x: number,\n        y: number\n    };\n    public punched: boolean;\n    public bingo: boolean;\n\n    constructor(props: any) {\n        super(props);\n        this.value = props.value;\n        this.label = props.label;\n        this.description = props.description;\n        this.imageURL = props.imageURL;\n        this.position = props.position || {};\n        this.punched = props.punched || false;\n        this.bingo = props.bingo || false;\n    }\n}","import {Model, Types} from 'chomex';\nimport BingoSlot from './slot';\n\n/**\n * BingoLine represents a successfull bingo line.\n */\nexport default class BingoLine extends Model {\n\n  protected static schema = {\n    succeeded: Types.date,\n    slots: Types.arrayOf(Types.reference(BingoSlot)),\n  }\n\n  public succeeded: Date;\n  public slots: BingoSlot[];\n\n  constructor(props: { slots: BingoSlot[], succeeded?: Date }) {\n    super(props);\n    this.slots = props.slots;\n    this.succeeded = props.succeeded || new Date();\n  }\n\n  public draw(ctx: CanvasRenderingContext2D, scale: number = 100) {\n    const start = this.slots[0].position;\n    const end = this.slots[this.slots.length - 1].position;\n    const unit = scale / this.slots.length;\n    const offset = unit / 2;\n    ctx.strokeStyle = 'orange';\n    ctx.lineWidth = scale / 100;\n    ctx.beginPath();\n    ctx.moveTo(offset + unit * start.x, offset + unit * start.y);\n    ctx.lineTo(offset + unit * end.x, offset + unit * end.y);\n    ctx.stroke();\n  }\n\n}","import {Model, Types} from 'chomex';\n\nimport BingoSlot, { IBingoSlotConfig } from './slot';\nimport BingoLine from './line';\nimport { Payload } from './qrcode';\n\nexport interface IBingoConfig {\n    sheet: {\n        width: number;\n        height: number;\n    };\n    slot: {\n        variations: IBingoSlotConfig[];\n    }\n}\n\nexport default class BingoSheet extends Model {\n\n    protected static __ns = 'BingoSheet';\n    protected static schema = {\n        width: Types.number,\n        height: Types.number,\n        slots: Types.arrayOf(\n            Types.arrayOf(\n                Types.reference(BingoSlot)\n            )\n        ),\n        lines: Types.arrayOf(Types.reference(BingoLine)),\n        initialized: Types.date,\n    }\n\n    public width: number;\n    public height: number;\n    public slots: BingoSlot[][];\n    public length: number;\n    public lines: BingoLine[];\n    public initialized: Date;\n\n    constructor(props: any) {\n        super(props, 'singleton');\n        this.width = props.width;\n        this.height = props.height;\n        this.slots = props.slots;\n        this.lines = props.lines || [];\n        this.length = this.width * this.height;\n        this.initialized = props.date || new Date();\n    }\n\n    private static arrayShuffle<T>(arr: T[]): T[] {\n        for (let i = arr.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n\n    private static getShuffledListWithLength(arr: IBingoSlotConfig[], length: number): IBingoSlotConfig[] {\n        const dest: IBingoSlotConfig[] = [];\n        while (dest.length < length) {\n            dest.push(...this.arrayShuffle<IBingoSlotConfig>(arr))\n        }\n        return dest.slice(0, length);\n    }\n\n    private static createSlot(variation: IBingoSlotConfig, index: number, width: number): BingoSlot {\n        const { value, label, description, imageURL } = variation;\n        const [x, y] = [index % width, Math.floor(index / width)];\n        const slot = new BingoSlot({ value, label, description, imageURL, position: { x, y } });\n        return slot;\n    }\n\n    static init(config: IBingoConfig): BingoSheet {\n        const {width, height} = config.sheet;\n        const slots: BingoSlot[][] = Array(height).fill(true).map(() => []);\n        const length = width * height;\n        this.getShuffledListWithLength(config.slot.variations, length).map((v, i) => {\n            const slot = this.createSlot(v, i, width);\n            return slots[slot.position.y].push(slot);\n        });\n        const sheet = new BingoSheet({\n            width: config.sheet.width,\n            height: config.sheet.height,\n            slots\n        });\n        return sheet;\n    }\n\n    static exists(): BingoSheet | undefined {\n        return this.find<BingoSheet>('singleton');\n    }\n\n    /**\n     * hit returns the slot which matches the given payload,\n     * or undefined if not found.\n     * @param payload\n     */\n    public hit(payload: Payload): BingoSlot | void {\n        // eslint-disable-next-line\n        return this.slots.flat().find((slot) => slot.value === payload.value);\n    }\n\n    /**\n     * punch marks the given hit slot as punched.\n     * @param hit\n     */\n    public punch(hit: BingoSlot): BingoSheet {\n        // eslint-disable-next-line\n        this.slots.flat().filter((slot) => slot.value === hit.value).map((slot) => {\n            // slot.punched = true;\n            const {x, y} = slot.position;\n            this.slots[y][x].punched = true;\n        });\n        this.lines = this.getBingoLines();\n        return this.save();\n    }\n\n    public isBingo(): boolean {\n        return this.getBingoLines().length !== 0;\n    }\n\n    public isCompleted(): boolean {\n        const { width, height } = this;\n        return this.getBingoLines().length >= width + height + 2;\n    }\n\n    public getBingoNumber(): number {\n        return this.getBingoLines().length;\n    }\n\n    public getBingoLines(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        lines.push(...this.getHorizontalBingo());\n        lines.push(...this.getVerticalBingo())\n        lines.push(...this.getDiagonalBingo());\n        this.markSlotsIfBingo(lines);\n        return lines;\n    }\n\n    private markSlotsIfBingo(lines: BingoLine[]) {\n        lines.map(line => {\n            return line.slots.map(slot => {\n                // this.slots[slot.position.y][slot.position.x].bingo = true;\n                return slot.bingo = true;\n            })\n        })\n    }\n\n    /**\n     * Return all the slots which constitute the horizontal bingo.\n     */\n    public getHorizontalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        for (let row = 0; row < this.height; row++) {\n            if (this.slots[row].every((slot) => slot.punched)) {\n                lines.push(new BingoLine({ slots: this.slots[row] }))\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Return all the slots which constitute the vertical bingo.\n     */\n    public getVerticalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        for (let col = 0; col < this.width; col++) {\n            if (this.slots.every((row) => row[col].punched)) {\n                lines.push(new BingoLine({slots: this.slots.map((row) => row[col]).flat()}));\n            }\n        }\n        return lines;\n    }\n\n    /**\n     * Return all the slots which constitute the diagonal bingo.\n     */\n    public getDiagonalBingo(): BingoLine[] {\n        const lines: BingoLine[] = [];\n        if (this.width === this.height) {\n            const len = Math.min(this.width, this.height);\n            const backslash = this.slots.map((row, i) => row[i]);\n            if (backslash.every(slot => slot.punched)) {\n                lines.push(new BingoLine({ slots: backslash }));\n            }\n            const slash = this.slots.map((row, i) => row[len - i - 1]);\n            if (slash.every(slot => slot.punched)) {\n                lines.push(new BingoLine({ slots: slash }));\n            }\n        } else {\n            // TODO: Consider NON-SQUARE bingo sheet.\n            return [];\n        }\n        return lines;\n    }\n}","import React from 'react';\nimport { Config } from \"./config.d\";\n\nconst config: Config = {\n    application: {\n        name: \"QRBINGO\"\n    },\n    bingo: {\n        sheet: {\n            width: 5,\n            height: 5\n        },\n        slot: {\n            variations: [\n                {\n                    value: \"istj\",\n                    label: \"IS\\nTJ\",\n                    description: \"The Inspector\"\n                },\n                {\n                    value: \"infj\",\n                    label: \"IN\\nFJ\",\n                    description: \"The Counselor\"\n                },\n                {\n                    value: \"intj\",\n                    label: \"IN\\nTJ\",\n                    description: \"The Mastermind\"\n                },\n                {\n                    value: \"enfj\",\n                    label: \"EN\\nFJ\",\n                    description: \"The Giver\"\n                },\n                {\n                    value: \"istp\",\n                    label: \"IS\\nTP\",\n                    description: \"The Craftsman\"\n                },\n                {\n                    value: \"esfj\",\n                    label: \"ES\\nFJ\",\n                    description: \"The Provider\"\n                },\n                {\n                    value: \"infp\",\n                    label: \"IN\\nFP\",\n                    description: \"The Idealist\"\n                },\n                {\n                    value: \"esfp\",\n                    label: \"ES\\nFP\",\n                    description: \"The Performer\"\n                },\n                {\n                    value: \"enfp\",\n                    label: \"EN\\nFP\",\n                    description: \"The Champion\"\n                },\n                {\n                    value: \"estp\",\n                    label: \"ES\\nTP\",\n                    description: \"The Doer\"\n                },\n                {\n                    value: \"estj\",\n                    label: \"ES\\nTJ\",\n                    description: \"The Supervisor\"\n                },\n                {\n                    value: \"entj\",\n                    label: \"EN\\nTJ\",\n                    description: \"The Commander\"\n                },\n                {\n                    value: \"intp\",\n                    label: \"IN\\nTP\",\n                    description: \"The Thinker\"\n                },\n                {\n                    value: \"isfj\",\n                    label: \"IS\\nFJ\",\n                    description: \"The Nurturer\"\n                },\n                {\n                    value: \"entp\",\n                    label: \"EN\\nTP\",\n                    description: \"The Visionary\"\n                },\n                {\n                    value: \"isfp\",\n                    label: \"IS\\nFP\",\n                    description: \"The Composer\"\n                }\n            ]\n        }\n    },\n    languages: [\n        {\n            lang: \"ja\",\n            label: \"日本語\",\n            default: true\n        },\n        {\n            lang: \"en\",\n            label: \"English\"\n        }\n    ],\n    messages: {\n        en: {\n            introduction: [\n                \"Scan QR code of people around you\",\n                \"Collect different MBTI types\",\n                \"Aim for Bingo and win a prize!\"\n            ],\n            congratulation: [\n                \"Congrats!\",\n                \"Show this screen to event staff\",\n                \"and get an awesome prize!\"\n            ],\n            found: (args) => <span>Found <b>{args[0]}</b>!</span>,\n        },\n        ja: {\n            introduction: [\n                \"近くの人のQRコードをスキャン\",\n                \"いろんなMBTIタイプを集めよう！\",\n                \"ビンゴを狙って商品をもらおう！\"\n            ],\n            congratulation: [\n                \"おめでとうございます！\",\n                \"お近くのスタッフにこちらの\",\n                \"画面を見せて、素敵なギフトを\",\n                \"お受け取りください。\"\n            ],\n            found: (args) => <span><b>{args[0]}</b> をみつけました！</span>,\n        }\n    }\n}\n\nexport default config;\n","import { createContext } from \"react\";\nimport BingoSheet from \"../models/sheet\";\nimport config from \"../config\";\nimport { QRCodeData } from \"../models/qrcode\";\n\nconst BingoSheetContext = createContext({\n    bingo: {\n        sheet: BingoSheet.init(config.bingo),\n    },\n    punch(data: QRCodeData) {},\n    scanning: false,\n    startScanning() {},\n    stopScanning() {},\n});\n\nexport default BingoSheetContext;\n","import React from 'react';\nimport BingoSheet from '../../models/sheet';\n\n// import refresh from './refresh.svg';\nimport logo from '../../logo.svg';\nimport './index.scss';\n\nconst GameMenu: React.FC<{ app: { name: string }, sheet: BingoSheet, reset: () => void, }> = ({ app, sheet, reset, }) => {\n    return (\n        <div className=\"game-menu\">\n            <h1>\n                <img src={logo} alt={app.name} />\n                <span>{app.name}</span>\n            </h1>\n            {/* <span className=\"start-time\">\n                {sheet.initialized.toLocaleString()}\n            </span> */}\n            {/* <img src={refresh} alt=\"Restart Game\" onClick={reset} /> */}\n        </div>\n    );\n};\n\nexport default GameMenu;","import React, { createRef } from 'react';\nimport cn from 'classnames';\n\nimport BingoSheet from \"../../models/sheet\";\nimport BingoSlot from '../../models/slot';\n\nimport './index.scss';\n\nconst LineDrawerCanvas: React.FC<{ sheet: BingoSheet }> = ({ sheet }) => {\n\n    const lines = sheet.lines;\n    const draw = (canvas: HTMLCanvasElement, scale: number) => {\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        lines.map(line => line.draw(ctx, scale));\n        console.log('Completed:', sheet.isCompleted());\n    };\n\n    const ref = createRef<HTMLCanvasElement>();\n\n    // Make sure canvas exists.\n    // TODO: Find another way.\n    const scale = 1000;\n    setTimeout(() => ref.current ? draw(ref.current, scale) : null);\n    return (\n        <canvas width={scale} height={scale} ref={ref} />\n    );\n};\n\nconst LineDrawer: React.FC<{ sheet: BingoSheet }> = ({ sheet }) => {\n    return (\n        <div className=\"Bingo_Line_Drawer_Container\">\n            <LineDrawerCanvas sheet={sheet} />\n        </div>\n    );\n};\n\nconst BingoSheetCell: React.FC<{slot: BingoSlot}> = ({slot}) => {\n    return (\n        <div className={cn(\"sheet-cell\", { punched: slot.punched, bingo: slot.bingo })}>\n            <div className=\"hole\">\n                {slot.label.split(\"\\n\").map((line, i) => <div key={i}>{line}</div>)}\n            </div>\n        </div>\n    );\n};\n\nconst BingoSheetRow: React.FC<{row: BingoSlot[]}> = ({row}) => {\n    return (\n        <div className=\"sheet-row\">\n            {row.map((slot, i) => <BingoSheetCell key={i} slot={slot} />)}\n        </div>\n    );\n};\n\nconst BingoSheetView: React.FC<{sheet: BingoSheet}> = ({sheet}) => {\n    return (\n        <div className=\"sheet-container\">\n            <div className={cn(\"sheet-wrapper\", { bingo: sheet.isBingo() })}>\n                {sheet.slots.map((row, i) => <BingoSheetRow key={i} row={row} />)}\n            </div>\n            <LineDrawer sheet={sheet} />\n        </div>\n    );\n};\n\nexport default BingoSheetView;\n","import jsqr, { QRCode } from 'jsqr';\n\nfunction getRectOfQRCode(video: HTMLVideoElement, size: { width: number, height: number }): {\n    x: number, y: number, width: number, height: number,\n} {\n    const x = (video.videoWidth  - size.width) / 2;\n    const y = (video.videoHeight - size.height) / 2;\n    return {x, y, ...size};\n}\n\nexport function detectQRCodeFromVideo({\n    video, canvas, size,\n}: {\n    video: HTMLVideoElement | null,\n    canvas: HTMLCanvasElement | null,\n    size: { width: number, height: number },\n}): QRCode | null {\n    if (!canvas) return null;\n    if (!video) return null;\n    const stream = video.srcObject;\n    if (!stream) return null;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return null;\n    const rect = getRectOfQRCode(video, size);\n    ctx.drawImage(\n        video, // Data Source\n        rect.x, rect.y, rect.width, rect.height, // Source Rect\n        0, 0, canvas.width, canvas.height, // Dest Rect\n    );\n    const img = ctx.getImageData(0, 0, video.width, video.height);\n    return jsqr(img.data, video.width, video.height);\n}\n\nexport function detectQRCodeFromImageURL(imageURL: string): Promise<QRCode | null> {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.src = imageURL;\n        img.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            [canvas.width, canvas.height] = [img.width, img.height];\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctx.drawImage(img, 0, 0);\n            const qrcode = jsqr(ctx.getImageData(0, 0, img.width, img.height).data, img.width, img.height);\n            resolve(qrcode);\n        };\n    });\n}","import React, { createRef, useState, RefObject, useEffect } from 'react';\nimport \"./VideoScanView.scss\";\n\nimport { detectQRCodeFromVideo } from '../../services/Detector';\nimport { QRCodeData } from '../../models/qrcode';\nimport { QRCode } from 'jsqr';\n\nimport left from './caret-left.svg';\n\nconst isMobile = /(iPhone|iPad|iPod|Android)/i.test(navigator.userAgent);\nconst facingMode =  isMobile ? { exact: 'environment' } : 'user';\n\nconst detect = (video: HTMLVideoElement, size: { width: number, height: number }, callback: (qrcode: QRCode | null) => void) => {\n    const canvas = document.createElement('canvas');\n    [canvas.width, canvas.height] = [video.width, video.height];\n    const qrcode = detectQRCodeFromVideo({ video, canvas, size })\n    callback(qrcode);\n};\n\nconst VideoStream: React.FC<{\n    stream: MediaStream,\n    stop: (s: MediaStream, data?: QRCodeData) => void,\n    video: RefObject<HTMLVideoElement>,\n}> = ({ stream, stop, video }) => {\n    const onSuccess = (data: QRCodeData) => {\n        if (video.current) video.current.pause();\n        stop(stream, data);\n    };\n    const area = createRef<HTMLDivElement>();\n    useEffect(() => {\n        const v = video.current;\n        if (!v) return console.error('video tag is not ready');\n        v.srcObject = stream;\n        let id: NodeJS.Timeout;\n        const callback = (qrcode: QRCode | null) => {\n            if (!qrcode) return;\n            clearInterval(id);\n            onSuccess(JSON.parse(qrcode.data) as QRCodeData);\n        };\n        const { offsetWidth: width, offsetHeight: height } = area.current!;\n        id = setInterval(detect.bind(null, v, {width, height}, callback), 1 * 1000);\n        // DEBUG:\n        // setTimeout(() => onSuccess({ action: QRCodeAction.DEBUG, payload: { value: 'isfp' } }), 2000)\n    // eslint-disable-next-line\n    }, []);\n    return (\n        <div className=\"Video_Stream_Container\">\n            <div className=\"Video_Stream_Navigation Top\">\n                <div className=\"nav-left\" onClick={() => stop(stream)}>\n                    <img src={left} alt=\"back\" className=\"nav-item-img\" />\n                    <span>Back</span>\n                </div>\n                <div className=\"nav-title\">Scan QR code</div>\n                <div className=\"nav-right\"></div>\n            </div>\n            <div className=\"Video_Stream_Movie\">\n                <div className=\"Video_Stream_Detect_Area\">\n                    <div className=\"Video_Stream_Detect_Area_Line\" ref={area}></div>\n                </div>\n                <video ref={video} muted={true} autoPlay playsInline width={'100%'} height={'100%'} />\n            </div>\n            <div className=\"Video_Stream_Navigation Bottom\">\n                <div className=\"nav-title\">Place code inside the box</div>\n            </div>\n        </div>\n    );\n};\n\nconst VideoScanView: React.FC<{ punch(data: QRCodeData): void }> = ({ punch }) => {\n    const [stream, setStream] = useState<MediaStream>();\n    const stop = (s: MediaStream, data?: QRCodeData) => {\n        if (data) punch(data);\n        setTimeout(() => setStream(undefined), 0);\n        s.getTracks().map(track => track.stop())\n    };\n    const v = createRef<HTMLVideoElement>();\n    const c = createRef<HTMLDivElement>();\n    const onClickStart = async () => {\n        const width = c.current!.offsetWidth;\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: false, video: { facingMode, width, height: width }\n        });\n        setStream(stream);\n    };\n    return (\n        <div className=\"video-capture-container\" ref={c}>\n            <button onClick={onClickStart}>SCAN QR CODE</button>\n            {stream ? <VideoStream stream={stream} stop={stop} video={v} /> : null}\n        </div>\n    );\n};\n\nexport default VideoScanView;\n","import React, { useState } from 'react';\nimport BingoSheetContext from '../../context/BingoSheet';\nimport BingoSheet from '../../models/sheet';\nimport { QRCodeData } from '../../models/qrcode';\n\nimport config from '../../config';\nimport GameMenu from '../GameMenu';\nimport BingoSheetView from '../BingoSheetView';\nimport VideoScanView from '../Scan/VideoScanView';\n\nimport './index.scss';\n\nconst Content: React.FC<{ reset: () => void, }> = ({ reset, }) => {\n  return (\n    <BingoSheetContext.Consumer>\n      {({bingo, punch}) => (\n        <div className=\"Game\">\n          <div className=\"Game_Title\">\n            <GameMenu app={config.application} sheet={bingo.sheet} reset={reset} />\n          </div>\n          <div className=\"Game_Contents\">\n            <div className=\"Bingo_Sheet_Label\">\n              <h2>YOUR BINGO SHEET</h2>\n            </div>\n            <BingoSheetView sheet={bingo.sheet} />\n            <VideoScanView punch={punch} />\n          </div>\n        </div>\n      )}\n    </BingoSheetContext.Consumer>\n  );\n};\n\nconst Game: React.FC<{\n    bingo: { sheet: BingoSheet },\n    punch: (data: QRCodeData) => void,\n    reset: () => void,\n}> = ({ bingo, punch, reset }) => {\n\n  const [scanning, setScanState] = useState(false);\n  const startScanning = () => setScanState(true);\n  const stopScanning = () => setScanState(false);\n\n  const context = {\n    bingo, punch,\n    scanning, startScanning, stopScanning,\n  };\n\n  return (\n    <BingoSheetContext.Provider value={context}>\n      <Content reset={reset} />\n    </BingoSheetContext.Provider>\n  );\n}\n\nexport default Game;\n","import config from '../config';\nimport { ReactNode } from 'react';\n\nconst messages = config.messages;\n\nfunction getDefaultLang(): string {\n    const availables = config.languages || [];\n    if (!availables) return 'ja';\n    const found = availables.find((l) => l.default);\n    if (!found) return 'ja';\n    return found.lang;\n}\n\nfunction get(key: string, args: any[] = []): string | string[] | ReactNode | null {\n    const url = new URL(window.location.href);\n    const lang = url.searchParams.get('lang') || getDefaultLang();\n    const dict = (messages as any)[lang];\n    const v = dict[key];\n    if (typeof v === 'undefined') return null;\n    if (typeof v === 'function') return v(args) as ReactNode;\n    return v;\n}\n\nexport default {\n    get,\n};\n","import React from 'react';\nimport './index.scss';\n\nimport logo from \"../../logo.svg\";\nimport config from '../../config';\nimport messages from '../../service/messages';\n\nconst LaunchingPage: React.FC<{start: () => void}> = ({start}) => {\n    const introduction = messages.get('introduction') as string[] || [];\n    return (\n        <div className=\"launching-page\">\n            <div className=\"legend\">\n                <div className=\"title\">\n                    <h1>\n                        <img src={logo} alt=\"QRBINGO\" />\n                        QRBINGO\n                    </h1>\n                </div>\n                <div className=\"lang-list\">\n                    {config.languages.map((av) => {\n                        return <a key={av.lang} href={`?lang=${av.lang}`}>{av.label}</a>;\n                    })}\n                </div>\n                <div className=\"introduction\">\n                    <ol>\n                        {introduction.map((line, i) => <li key={i}>\n                            <br /><div>{line}</div>\n                        </li>)}\n                    </ol>\n                </div>\n                <div className=\"start-button-wrapper\">\n                    <button onClick={start}>START!</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LaunchingPage;\n","import React, { ReactNode, useState, useEffect } from 'react';\n\n// import closeIcon from \"./close.png\";\n\nimport \"./index.scss\";\n\nconst Modal: React.FC<{\n    close: () => void,\n    show: boolean,\n    content?: ReactNode,\n}> = ({ close, content, show }) => {\n    const [opacity, setOpacity] = useState<number>(0);\n    useEffect(() => {\n        setOpacity(show ? 1 : 0);\n    }, [show]);\n    return (\n        <div className=\"Modal_Container\" style={{ opacity }}>\n            <div className=\"Modal_Content_Wrapper\">\n                <div\n                    className=\"Modal_Content_Background\"\n                    onClick={close}\n                >\n                    <div className=\"Modal_Content\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n            <div className=\"Modal_Background\"></div>\n        </div>\n    );\n};\n\nexport default Modal;\n","import { createContext, ReactNode } from \"react\";\n\nconst ApplicationContext = createContext({\n    modal: null,\n    setModalState: (state: { content?: ReactNode, show: boolean }) => { },\n    closeModal: () => {},\n});\n\nexport default ApplicationContext;\n","import React from 'react';\n\nimport \"../common.scss\";\nimport check from './check.svg';\nimport { Payload } from '../../../../models/qrcode';\n\nimport messages from '../../../../service/messages';\n\nconst ModalContentOnFound: React.FC<{\n    payload: Payload,\n    close: () => void,\n}> = ({\n    payload,\n    close,\n}) => {\n   const found = messages.get('found', [payload.value.toString().toUpperCase()]);\n    return (\n        <div className=\"Content_Wrapper\">\n            <div className=\"Content_Icon\">\n                <img src={check} alt=\"Found\" />\n            </div>\n            <div className=\"Content_Message\">\n                <div>{found}</div>\n            </div>\n            <div className=\"Content_Actions\">\n                <button onClick={close}>VIEW YOUR CARD</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnFound;\n","import React from 'react';\nimport gift from './gift.svg';\nimport \"../common.scss\";\nimport messages from '../../../../service/messages';\n\nconst ModalContentOnBingoSucceeded: React.FC<{\n    close: () => void,\n}> = ({\n    close,\n}) => {\n    const lines = messages.get('congratulations') as string[] || [];\n    return (\n        <div className=\"Content_Wrapper\" onClick={close}>\n            <div className=\"Content_Icon\">\n                <img src={gift} alt=\"Congraturations!\" />\n            </div>\n            <div className=\"Content_Message\">\n                <h1>BINGO!!!</h1>\n            </div>\n            <div className=\"Content_Message Lines\">\n                {lines.map((line, i) => <p key={i}>{line}</p>)}\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnBingoSucceeded;","import React, { useState, ReactNode } from 'react';\n\nimport Game from './components/Game';\nimport LaunchingPage from './components/LaunchingPage';\nimport BingoSheet from \"./models/sheet\";\n\nimport config from './config';\nimport { QRCodeData } from './models/qrcode';\n\nimport \"./App.scss\";\nimport Modal from './components/Modal';\n\nimport ApplicationContext from \"./context/Application\";\nimport ModalContentOnFound from './components/Modal/Contents/OnFound';\nimport ModalContentOnBingoSucceeded from './components/Modal/Contents/OnBingoSucceeded';\n\nconst App: React.FC = () => {\n  // BingoSheet.drop();\n  const sheet = BingoSheet.exists();\n  const [bingo, updateBingo] = useState({ sheet: sheet as BingoSheet });\n\n  const [modalState, setModalState] = useState<{ content?: ReactNode, show: boolean, resolve?: () => void }>({\n    content: null, show: false,\n  });\n  const closeModal = () => {\n    setTimeout(() => setModalState({ show: false }), 400);\n    setModalState({ show: false, content: modalState.content });\n    if (typeof modalState.resolve === 'function') modalState.resolve();\n  };\n  const showModal = (content: ReactNode) => {\n    return new Promise((resolve) => {\n      setModalState({ show: false, content, resolve });\n      setTimeout(() => setModalState({ show: true, content, resolve }));\n    });\n  };\n\n  const ctx = {\n    modal: null, setModalState: (ms: { modal?: ReactNode, show: boolean }) => setModalState(ms), closeModal,\n  }\n\n  const punch = async (data: QRCodeData) => {\n    const slot = bingo.sheet.hit(data.payload);\n    if (!slot) return; // TODO: do something\n    await showModal(<ModalContentOnFound payload={data.payload} close={closeModal} />);\n    const bingoCount = bingo.sheet.lines.length;\n    updateBingo({ sheet: bingo.sheet.punch(slot) });\n    if (bingoCount < bingo.sheet.lines.length) setTimeout(() => {\n      showModal(<ModalContentOnBingoSucceeded close={closeModal} />);\n    }, 500); // FIXME: ひー\n  };\n\n  const reset = () => {\n    if (!window.confirm(\"Are you sure to delete current progress and start new game?\")) return;\n    updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n  };\n  const start = () => updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n\n  return (\n    <ApplicationContext.Provider value={ctx}>\n    <div className=\"App\">\n      {bingo.sheet ? <Game bingo={bingo} punch={punch} reset={reset} /> : <LaunchingPage start={start} />}\n      {modalState.content ? <Modal close={closeModal} {...modalState} /> : null}\n    </div>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}