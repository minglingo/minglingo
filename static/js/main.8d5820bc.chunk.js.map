{"version":3,"sources":["logo.svg","components/Detector/VideoScan/caret-left.svg","components/Modal/Contents/OnFound/check.svg","components/Modal/Contents/OnBingoSucceeded/gift.svg","models/slot.ts","models/sheet.ts","config.tsx","context/BingoSheet.ts","components/GameMenu/index.tsx","components/BingoSheetView/index.tsx","components/Detector/VideoScan/VideoScanView.tsx","services/Detector.ts","components/Game/index.tsx","service/messages.ts","components/LaunchingPage/index.tsx","components/Modal/index.tsx","context/Application.ts","components/Modal/Contents/OnFound/index.tsx","components/Modal/Contents/OnBingoSucceeded/index.tsx","App.tsx","index.tsx"],"names":["module","exports","BingoSlot","props","value","label","description","imageURL","position","punched","bingo","Model","__ns","BingoSheet","width","height","slots","length","initialized","date","Date","payload","this","flat","find","slot","hit","filter","map","x","y","save","getBingo","concat","getHorizontalBingo","getVerticalBingo","getDiagonalBingo","markSlotsIfBingo","row","every","col","len","Math","min","backslash","i","slash","arr","j","floor","random","dest","push","arrayShuffle","slice","variation","index","config","sheet","Array","fill","getShuffledListWithLength","variations","v","createSlot","schema","Types","number","arrayOf","reference","application","name","languages","lang","default","messages","en","introduction","congratulation","found","args","ja","BingoSheetContext","createContext","init","punch","data","scanning","startScanning","stopScanning","GameMenu","app","reset","className","src","logo","alt","BingoSheetCell","cn","split","line","key","BingoSheetRow","BingoSheetView","isBingo","facingMode","test","navigator","userAgent","exact","detect","video","callback","canvas","document","createElement","srcObject","ctx","getContext","drawImage","img","getImageData","jsqr","detectQRCodeFromVideo","VideoStream","stream","stop","useEffect","id","current","console","error","setInterval","bind","qrcode","clearInterval","JSON","parse","pause","onClick","left","ref","muted","autoPlay","playsInline","VideoScanView","useState","setStream","createRef","c","onClickStart","a","offsetWidth","mediaDevices","getUserMedia","audio","s","setTimeout","undefined","getTracks","track","Content","Consumer","Game","setScanState","context","Provider","get","URL","window","location","href","searchParams","availables","l","getDefaultLang","LaunchingPage","start","av","Modal","close","content","show","opacity","setOpacity","style","ApplicationContext","modal","setModalState","state","closeModal","ModalContentOnFound","toString","toUpperCase","check","ModalContentOnBingoSucceeded","lines","gift","App","exists","updateBingo","modalState","resolve","showModal","Promise","ms","Application","confirm","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d5820bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c74ea89.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret-left.4fa5bd11.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.33410986.svg\";","module.exports = __webpack_public_path__ + \"static/media/gift.f4453374.svg\";","import {Model} from 'chomex';\n\nexport interface IBingoSlotConfig {\n    value: string;\n    label: string;\n    description?: string;\n    imageURL?: string;\n}\n\nexport default class BingoSlot extends Model {\n\n    protected static __ns = 'BingoSlot';\n\n    public value: string;\n    public label: string;\n    public description: string;\n    public imageURL: string;\n    public position: {\n        x: number,\n        y: number\n    };\n    public punched: boolean;\n    public bingo: boolean;\n\n    constructor(props: any) {\n        super(props);\n        this.value = props.value;\n        this.label = props.label;\n        this.description = props.description;\n        this.imageURL = props.imageURL;\n        this.position = props.position || {};\n        this.punched = props.punched || false;\n        this.bingo = props.bingo || false;\n    }\n}","import {Model, Types} from 'chomex';\n\nimport BingoSlot, { IBingoSlotConfig } from './slot';\nimport { Payload } from './qrcode';\n\nexport interface IBingoConfig {\n    sheet: {\n        width: number;\n        height: number;\n    };\n    slot: {\n        variations: IBingoSlotConfig[];\n    }\n}\n\nexport default class BingoSheet extends Model {\n\n    protected static __ns = 'BingoSheet';\n    protected static schema = {\n        width: Types.number,\n        height: Types.number,\n        slots: Types.arrayOf(\n            Types.arrayOf(\n                Types.reference(BingoSlot)\n            )\n        ),\n        initialized: Types.date,\n    }\n\n    public width: number;\n    public height: number;\n    public slots: BingoSlot[][];\n    public length: number;\n    public initialized: Date;\n\n    constructor(props: any) {\n        super(props, 'singleton');\n        this.width = props.width;\n        this.height = props.height;\n        this.slots = props.slots;\n        this.length = this.width * this.height;\n        this.initialized = props.date || new Date();\n    }\n\n    private static arrayShuffle<T>(arr: T[]): T[] {\n        for (let i = arr.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n\n    private static getShuffledListWithLength(arr: IBingoSlotConfig[], length: number): IBingoSlotConfig[] {\n        const dest: IBingoSlotConfig[] = [];\n        while (dest.length < length) {\n            dest.push(...this.arrayShuffle<IBingoSlotConfig>(arr))\n        }\n        return dest.slice(0, length);\n    }\n\n    private static createSlot(variation: IBingoSlotConfig, index: number, width: number): BingoSlot {\n        const { value, label, description, imageURL } = variation;\n        const [x, y] = [index % width, Math.floor(index / width)];\n        const slot = new BingoSlot({ value, label, description, imageURL, position: { x, y } });\n        return slot;\n    }\n\n    static init(config: IBingoConfig): BingoSheet {\n        const {width, height} = config.sheet;\n        const slots: BingoSlot[][] = Array(height).fill(true).map(() => []);\n        const length = width * height;\n        this.getShuffledListWithLength(config.slot.variations, length).map((v, i) => {\n            const slot = this.createSlot(v, i, width);\n            return slots[slot.position.y].push(slot);\n        });\n        const sheet = new BingoSheet({\n            width: config.sheet.width,\n            height: config.sheet.height,\n            slots\n        });\n        return sheet;\n    }\n\n    static exists(): BingoSheet | undefined {\n        return this.find<BingoSheet>('singleton');\n    }\n\n    /**\n     * hit returns the slot which matches the given payload,\n     * or undefined if not found.\n     * @param payload\n     */\n    public hit(payload: Payload): BingoSlot | void {\n        // eslint-disable-next-line\n        return this.slots.flat().find((slot) => slot.value === payload.value);\n    }\n\n    /**\n     * punch marks the given hit slot as punched.\n     * @param hit\n     */\n    public punch(hit: BingoSlot): BingoSheet {\n        // eslint-disable-next-line\n        this.slots.flat().filter((slot) => slot.value === hit.value).map((slot) => {\n            // slot.punched = true;\n            const {x, y} = slot.position;\n            this.slots[y][x].punched = true;\n        });\n        return this.save();\n    }\n\n    public isBingo(): boolean {\n        return this.getBingo().length !== 0;\n    }\n\n    public getBingo(): BingoSlot[] {\n        let bingo: BingoSlot[] = [];\n        bingo = bingo.concat(this.getHorizontalBingo());\n        bingo = bingo.concat(this.getVerticalBingo());\n        bingo = bingo.concat(this.getDiagonalBingo());\n        this.markSlotsIfBingo(bingo);\n        return bingo;\n    }\n\n    private markSlotsIfBingo(bingo: BingoSlot[]) {\n        bingo.map((slot) => this.slots[slot.position.y][slot.position.x].bingo = true);\n    }\n\n    /**\n     * Return all the slots which constitute the horizontal bingo.\n     */\n    public getHorizontalBingo(): BingoSlot[] {\n        for (let row = 0; row < this.height; row++) {\n            if (this.slots[row].every((slot) => slot.punched)) {\n                return this.slots[row];\n            }\n        }\n        return [];\n    }\n\n    /**\n     * Return all the slots which constitute the vertical bingo.\n     */\n    public getVerticalBingo(): BingoSlot[] {\n        for (let col = 0; col < this.width; col++) {\n            if (this.slots.every((row) => row[col].punched)) {\n                return this.slots.map((row) => row[col]).flat();\n            }\n        }\n        return [];\n    }\n\n    /**\n     * Return all the slots which constitute the diagonal bingo.\n     */\n    public getDiagonalBingo(): BingoSlot[] {\n        let bingo: BingoSlot[] = [];\n        if (this.width === this.height) {\n            const len = Math.min(this.width, this.height);\n            const backslash = this.slots.map((row, i) => row[i]);\n            if (backslash.every(slot => slot.punched)) {\n                bingo = bingo.concat(backslash);\n            }\n            const slash = this.slots.map((row, i) => row[len - i - 1]);\n            if (slash.every(slot => slot.punched)) {\n                bingo = bingo.concat(slash);\n            }\n        } else {\n            // TODO: Consider NON-SQUARE bingo sheet.\n            return [];\n        }\n        return bingo;\n    }\n}","import React from 'react';\nimport { Config } from \"./config.d\";\n\nconst config: Config = {\n    application: {\n        name: \"QRBINGO\"\n    },\n    bingo: {\n        sheet: {\n            width: 5,\n            height: 5\n        },\n        slot: {\n            variations: [\n                {\n                    value: \"istj\",\n                    label: \"IS\\nTJ\",\n                    description: \"The Inspector\"\n                },\n                {\n                    value: \"infj\",\n                    label: \"IN\\nFJ\",\n                    description: \"The Counselor\"\n                },\n                {\n                    value: \"intj\",\n                    label: \"IN\\nTJ\",\n                    description: \"The Mastermind\"\n                },\n                {\n                    value: \"enfj\",\n                    label: \"EN\\nFJ\",\n                    description: \"The Giver\"\n                },\n                {\n                    value: \"istp\",\n                    label: \"IS\\nTP\",\n                    description: \"The Craftsman\"\n                },\n                {\n                    value: \"esfj\",\n                    label: \"ES\\nFJ\",\n                    description: \"The Provider\"\n                },\n                {\n                    value: \"infp\",\n                    label: \"IN\\nFP\",\n                    description: \"The Idealist\"\n                },\n                {\n                    value: \"esfp\",\n                    label: \"ES\\nFP\",\n                    description: \"The Performer\"\n                },\n                {\n                    value: \"enfp\",\n                    label: \"EN\\nFP\",\n                    description: \"The Champion\"\n                },\n                {\n                    value: \"estp\",\n                    label: \"ES\\nTP\",\n                    description: \"The Doer\"\n                },\n                {\n                    value: \"estj\",\n                    label: \"ES\\nTJ\",\n                    description: \"The Supervisor\"\n                },\n                {\n                    value: \"entj\",\n                    label: \"EN\\nTJ\",\n                    description: \"The Commander\"\n                },\n                {\n                    value: \"intp\",\n                    label: \"IN\\nTP\",\n                    description: \"The Thinker\"\n                },\n                {\n                    value: \"isfj\",\n                    label: \"IS\\nFJ\",\n                    description: \"The Nurturer\"\n                },\n                {\n                    value: \"entp\",\n                    label: \"EN\\nTP\",\n                    description: \"The Visionary\"\n                },\n                {\n                    value: \"isfp\",\n                    label: \"IS\\nFP\",\n                    description: \"The Composer\"\n                }\n            ]\n        }\n    },\n    languages: [\n        {\n            lang: \"ja\",\n            label: \"日本語\",\n            default: true\n        },\n        {\n            lang: \"en\",\n            label: \"English\"\n        }\n    ],\n    messages: {\n        en: {\n            introduction: [\n                \"Scan QR code of people around you\",\n                \"Collect different MBTI types\",\n                \"Aim for Bingo and win a prize!\"\n            ],\n            congratulation: [\n                \"Congrats!\",\n                \"Show this screen to event staff\",\n                \"and get an awesome prize!\"\n            ],\n            found: (args) => <span>Found <b>{args[0]}</b>!</span>,\n        },\n        ja: {\n            introduction: [\n                \"近くの人のQRコードをスキャン\",\n                \"いろんなMBTIタイプを集めよう！\",\n                \"ビンゴを狙って商品をもらおう！\"\n            ],\n            congratulation: [\n                \"おめでとうございます！\",\n                \"お近くのスタッフにこちらの\",\n                \"画面を見せて、素敵なギフトを\",\n                \"お受け取りください。\"\n            ],\n            found: (args) => <span><b>{args[0]}</b> をみつけました！</span>,\n        }\n    }\n}\n\nexport default config;\n","import { createContext } from \"react\";\nimport BingoSheet from \"../models/sheet\";\nimport config from \"../config\";\nimport { QRCodeData } from \"../models/qrcode\";\n\nconst BingoSheetContext = createContext({\n    bingo: {\n        sheet: BingoSheet.init(config.bingo),\n    },\n    punch(data: QRCodeData) {},\n    scanning: false,\n    startScanning() {},\n    stopScanning() {},\n});\n\nexport default BingoSheetContext;\n","import React from 'react';\nimport BingoSheet from '../../models/sheet';\n\n// import refresh from './refresh.svg';\nimport logo from '../../logo.svg';\nimport './index.scss';\n\nconst GameMenu: React.FC<{ app: { name: string }, sheet: BingoSheet, reset: () => void, }> = ({ app, sheet, reset, }) => {\n    return (\n        <div className=\"game-menu\">\n            <h1>\n                <img src={logo} alt={app.name} />\n                <span>{app.name}</span>\n            </h1>\n            {/* <span className=\"start-time\">\n                {sheet.initialized.toLocaleString()}\n            </span> */}\n            {/* <img src={refresh} alt=\"Restart Game\" onClick={reset} /> */}\n        </div>\n    );\n};\n\nexport default GameMenu;","import React from 'react';\n\nimport cn from 'classnames';\n\nimport BingoSheet from \"../../models/sheet\";\nimport BingoSlot from '../../models/slot';\nimport './index.scss';\n\nconst BingoSheetCell: React.FC<{slot: BingoSlot}> = ({slot}) => {\n    return (\n        <div className={cn(\"sheet-cell\", { punched: slot.punched, bingo: slot.bingo })}>\n            <div className=\"hole\">\n                {slot.label.split(\"\\n\").map((line, i) => <div key={i}>{line}</div>)}\n            </div>\n        </div>\n    );\n};\n\nconst BingoSheetRow: React.FC<{row: BingoSlot[]}> = ({row}) => {\n    return (\n        <div className=\"sheet-row\">\n            {row.map((slot, i) => <BingoSheetCell key={i} slot={slot} />)}\n        </div>\n    );\n};\n\nconst BingoSheetView: React.FC<{sheet: BingoSheet}> = ({sheet}) => {\n    return (\n        <div className=\"sheet-container\">\n            <div className={cn(\"sheet-wrapper\", { bingo: sheet.isBingo() })}>\n                {sheet.slots.map((row, i) => <BingoSheetRow key={i} row={row} />)}\n            </div>\n        </div>\n    );\n};\n\nexport default BingoSheetView;\n","import React, { createRef, useState, RefObject, useEffect } from 'react';\nimport \"./VideoScanView.scss\";\n\nimport { detectQRCodeFromVideo } from '../../../services/Detector';\nimport { QRCodeData } from '../../../models/qrcode';\nimport { QRCode } from 'jsqr';\n\nimport left from './caret-left.svg';\n\nconst isMobile = /(iPhone|iPad|iPod|Android)/i.test(navigator.userAgent);\nconst facingMode =  isMobile ? { exact: 'environment' } : 'user';\n\nconst detect = (video: HTMLVideoElement, callback: (qrcode: QRCode | null) => void) => {\n    const canvas = document.createElement('canvas');\n    [canvas.width, canvas.height] = [video.width, video.height];\n    const qrcode = detectQRCodeFromVideo({ video, canvas })\n    callback(qrcode);\n};\n\nconst VideoStream: React.FC<{\n    stream: MediaStream,\n    stop: (s: MediaStream, data?: QRCodeData) => void,\n    video: RefObject<HTMLVideoElement>,\n}> = ({ stream, stop, video }) => {\n    const onSuccess = (data: QRCodeData) => {\n        if (video.current) video.current.pause();\n        stop(stream, data);\n    };\n    useEffect(() => {\n        const v = video.current;\n        if (!v) return console.error('video tag is not ready');\n        v.srcObject = stream;\n        let id: NodeJS.Timeout;\n        const callback = (qrcode: QRCode | null) => {\n            if (!qrcode) return;\n            clearInterval(id);\n            onSuccess(JSON.parse(qrcode.data) as QRCodeData);\n        };\n        id = setInterval(detect.bind(null, v, callback), 1 * 1000);\n        // DEBUG:\n        // setTimeout(() => onSuccess({ action: QRCodeAction.DEBUG, payload: { value: 'isfp' } }), 2000)\n    // eslint-disable-next-line\n    }, []);\n    return (\n        <div className=\"Video_Stream_Container\">\n            <div className=\"Video_Stream_Navigation Top\">\n                <div className=\"nav-left\" onClick={() => stop(stream)}>\n                    <img src={left} alt=\"back\" className=\"nav-item-img\" />\n                    <span>Back</span>\n                </div>\n                <div className=\"nav-title\">Scan QR code</div>\n                <div className=\"nav-right\"></div>\n            </div>\n            <div className=\"Video_Stream_Movie\">\n                <video ref={video} muted={true} autoPlay playsInline width={'100%'} height={'100%'} />\n            </div>\n            <div className=\"Video_Stream_Navigation Bottom\">\n                <div className=\"nav-title\">Place code inside the box</div>\n            </div>\n        </div>\n    );\n};\n\nconst VideoScanView: React.FC<{ punch(data: QRCodeData): void }> = ({ punch }) => {\n    const [stream, setStream] = useState<MediaStream>();\n    const stop = (s: MediaStream, data?: QRCodeData) => {\n        if (data) punch(data);\n        setTimeout(() => setStream(undefined), 0);\n        s.getTracks().map(track => track.stop())\n    };\n    const v = createRef<HTMLVideoElement>();\n    const c = createRef<HTMLDivElement>();\n    const onClickStart = async () => {\n        const width = c.current!.offsetWidth;\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: false, video: { facingMode, width, height: width }\n        });\n        setStream(stream);\n    };\n    return (\n        <div className=\"video-capture-container\" ref={c}>\n            <button onClick={onClickStart}>SCAN QR CODE</button>\n            {stream ? <VideoStream stream={stream} stop={stop} video={v} /> : null}\n        </div>\n    );\n};\n\nexport default VideoScanView;\n","import jsqr, { QRCode } from 'jsqr';\n\nexport function detectQRCodeFromVideo({video, canvas}: {video: HTMLVideoElement | null, canvas: HTMLCanvasElement | null}): QRCode | null {\n    if (!canvas) return null;\n    if (!video) return null;\n    const stream = video.srcObject;\n    if (!stream) return null;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return null;\n    ctx.drawImage(video, 0, 0, video.width, video.height);\n    const img = ctx.getImageData(0, 0, video.width, video.height);\n    return jsqr(img.data, video.width, video.height);\n}\n\nexport function detectQRCodeFromImageURL(imageURL: string): Promise<QRCode | null> {\n    return new Promise((resolve) => {\n        const img = new Image();\n        img.src = imageURL;\n        img.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            [canvas.width, canvas.height] = [img.width, img.height];\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            ctx.drawImage(img, 0, 0);\n            const qrcode = jsqr(ctx.getImageData(0, 0, img.width, img.height).data, img.width, img.height);\n            resolve(qrcode);\n        };\n    });\n}","import React, { useState } from 'react';\nimport BingoSheetContext from '../../context/BingoSheet';\nimport BingoSheet from '../../models/sheet';\nimport { QRCodeData } from '../../models/qrcode';\n\nimport config from '../../config';\nimport GameMenu from '../GameMenu';\nimport BingoSheetView from '../BingoSheetView';\nimport VideoScanView from '../Detector/VideoScan/VideoScanView';\n\nimport './index.scss';\n\nconst Content: React.FC<{ reset: () => void, }> = ({ reset, }) => {\n  return (\n    <BingoSheetContext.Consumer>\n      {({bingo, punch}) => (\n        <div className=\"Game\">\n          <div className=\"Game_Title\">\n            <GameMenu app={config.application} sheet={bingo.sheet} reset={reset} />\n          </div>\n          <div className=\"Game_Contents\">\n            <div className=\"Bingo_Sheet_Label\">\n              <h2>YOUPR BINGO SHEET</h2>\n            </div>\n            <BingoSheetView sheet={bingo.sheet} />\n            <VideoScanView punch={punch} />\n          </div>\n        </div>\n      )}\n    </BingoSheetContext.Consumer>\n  );\n};\n\nconst Game: React.FC<{\n    bingo: { sheet: BingoSheet },\n    punch: (data: QRCodeData) => void,\n    reset: () => void,\n}> = ({ bingo, punch, reset }) => {\n\n  const [scanning, setScanState] = useState(false);\n  const startScanning = () => setScanState(true);\n  const stopScanning = () => setScanState(false);\n\n  const context = {\n    bingo, punch,\n    scanning, startScanning, stopScanning,\n  };\n\n  return (\n    <BingoSheetContext.Provider value={context}>\n      <Content reset={reset} />\n    </BingoSheetContext.Provider>\n  );\n}\n\nexport default Game;\n","import config from '../config';\nimport { ReactNode } from 'react';\n\nconst messages = config.messages;\n\nfunction getDefaultLang(): string {\n    const availables = config.languages || [];\n    if (!availables) return 'ja';\n    const found = availables.find((l) => l.default);\n    if (!found) return 'ja';\n    return found.lang;\n}\n\nfunction get(key: string, args: any[] = []): string | string[] | ReactNode | null {\n    const url = new URL(window.location.href);\n    const lang = url.searchParams.get('lang') || getDefaultLang();\n    const dict = (messages as any)[lang];\n    const v = dict[key];\n    if (typeof v === 'undefined') return null;\n    if (typeof v === 'function') return v(args) as ReactNode;\n    return v;\n}\n\nexport default {\n    get,\n};\n","import React from 'react';\nimport './index.scss';\n\nimport logo from \"../../logo.svg\";\nimport config from '../../config';\nimport messages from '../../service/messages';\n\nconst LaunchingPage: React.FC<{start: () => void}> = ({start}) => {\n    const introduction = messages.get('introduction') as string[] || [];\n    return (\n        <div className=\"launching-page\">\n            <div className=\"legend\">\n                <div className=\"title\">\n                    <h1>\n                        <img src={logo} alt=\"QRBINGO\" />\n                        QRBINGO\n                    </h1>\n                </div>\n                <div className=\"lang-list\">\n                    {config.languages.map((av) => {\n                        return <a key={av.lang} href={`?lang=${av.lang}`}>{av.label}</a>;\n                    })}\n                </div>\n                <div className=\"introduction\">\n                    <ol>\n                        {introduction.map((line, i) => <li key={i}>\n                            <br /><div>{line}</div>\n                        </li>)}\n                    </ol>\n                </div>\n                <div className=\"start-button-wrapper\">\n                    <button onClick={start}>START!</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LaunchingPage;\n","import React, { ReactNode, useState, useEffect } from 'react';\n\n// import closeIcon from \"./close.png\";\n\nimport \"./index.scss\";\n\nconst Modal: React.FC<{\n    close: () => void,\n    show: boolean,\n    content?: ReactNode,\n}> = ({ close, content, show }) => {\n    const [opacity, setOpacity] = useState<number>(0);\n    useEffect(() => {\n        setOpacity(show ? 1 : 0);\n    }, [show]);\n    return (\n        <div className=\"Modal_Container\" style={{ opacity }}>\n            <div className=\"Modal_Content_Wrapper\">\n                <div\n                    className=\"Modal_Content_Background\"\n                    onClick={close}\n                >\n                    <div className=\"Modal_Content\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n            <div className=\"Modal_Background\"></div>\n        </div>\n    );\n};\n\nexport default Modal;\n","import { createContext, ReactNode } from \"react\";\n\nconst ApplicationContext = createContext({\n    modal: null,\n    setModalState: (state: { content?: ReactNode, show: boolean }) => { },\n    closeModal: () => {},\n});\n\nexport default ApplicationContext;\n","import React from 'react';\n\nimport \"../common.scss\";\nimport check from './check.svg';\nimport { Payload } from '../../../../models/qrcode';\n\nimport messages from '../../../../service/messages';\n\nconst ModalContentOnFound: React.FC<{\n    payload: Payload,\n    close: () => void,\n}> = ({\n    payload,\n    close,\n}) => {\n   const found = messages.get('found', [payload.value.toString().toUpperCase()]);\n    return (\n        <div className=\"Content_Wrapper\">\n            <div className=\"Content_Icon\">\n                <img src={check} alt=\"Found\" />\n            </div>\n            <div className=\"Content_Message\">\n                <div>{found}</div>\n            </div>\n            <div className=\"Content_Actions\">\n                <button onClick={close}>VIEW YOUR CARD</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnFound;\n","import React from 'react';\nimport gift from './gift.svg';\nimport \"../common.scss\";\nimport messages from '../../../../service/messages';\n\nconst ModalContentOnBingoSucceeded: React.FC<{\n    close: () => void,\n}> = ({\n    close,\n}) => {\n    const lines = messages.get('congratulations') as string[] || [];\n    return (\n        <div className=\"Content_Wrapper\" onClick={close}>\n            <div className=\"Content_Icon\">\n                <img src={gift} alt=\"Congraturations!\" />\n            </div>\n            <div className=\"Content_Message\">\n                <h1>BINGO!!!</h1>\n            </div>\n            <div className=\"Content_Message Lines\">\n                {lines.map((line, i) => <p key={i}>{line}</p>)}\n            </div>\n        </div>\n    );\n};\n\nexport default ModalContentOnBingoSucceeded;","import React, { useState, ReactNode } from 'react';\n\nimport Game from './components/Game';\nimport LaunchingPage from './components/LaunchingPage';\nimport BingoSheet from \"./models/sheet\";\n\nimport config from './config';\nimport { QRCodeData } from './models/qrcode';\n\nimport \"./App.scss\";\nimport Modal from './components/Modal';\n\nimport ApplicationContext from \"./context/Application\";\nimport ModalContentOnFound from './components/Modal/Contents/OnFound';\nimport ModalContentOnBingoSucceeded from './components/Modal/Contents/OnBingoSucceeded';\n\nconst App: React.FC = () => {\n  // BingoSheet.drop();\n  const sheet = BingoSheet.exists();\n  const [bingo, updateBingo] = useState({ sheet: sheet as BingoSheet });\n\n  const [modalState, setModalState] = useState<{ content?: ReactNode, show: boolean, resolve?: () => void }>({\n    content: null, show: false,\n  });\n  const closeModal = () => {\n    setTimeout(() => setModalState({ show: false }), 400);\n    setModalState({ show: false, content: modalState.content });\n    if (typeof modalState.resolve === 'function') modalState.resolve();\n  };\n  const showModal = (content: ReactNode) => {\n    return new Promise((resolve) => {\n      setModalState({ show: false, content, resolve });\n      setTimeout(() => setModalState({ show: true, content, resolve }));\n    });\n  };\n\n  const ctx = {\n    modal: null, setModalState: (ms: { modal?: ReactNode, show: boolean }) => setModalState(ms), closeModal,\n  }\n\n  const punch = async (data: QRCodeData) => {\n    const slot = bingo.sheet.hit(data.payload);\n    if (!slot) return; // TODO: do something\n    await showModal(<ModalContentOnFound payload={data.payload} close={closeModal} />);\n    updateBingo({ sheet: bingo.sheet.punch(slot) });\n    if (bingo.sheet.isBingo()) setTimeout(() => {\n      showModal(<ModalContentOnBingoSucceeded close={closeModal} />);\n    }, 500); // FIXME: ひー\n  };\n\n  const reset = () => {\n    if (!window.confirm(\"Are you sure to delete current progress and start new game?\")) return;\n    updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n  };\n  const start = () => updateBingo({ sheet: BingoSheet.init(config.bingo).save<BingoSheet>() });\n\n  return (\n    <ApplicationContext.Provider value={ctx}>\n    <div className=\"App\">\n      {bingo.sheet ? <Game bingo={bingo} punch={punch} reset={reset} /> : <LaunchingPage start={start} />}\n      {modalState.content ? <Modal close={closeModal} {...modalState} /> : null}\n    </div>\n    </ApplicationContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}